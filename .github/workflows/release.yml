name: Release Bridge UI App

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-docker:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v4

      # Authenticate with GCP
      - name: Authenticate with Workload Identity Federation
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_ARTIFACT_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
          service_account: "sa-rise-github-actions@${{ secrets.GCP_ARTIFACT_PROJECT_ID }}.iam.gserviceaccount.com"

      # Insert gcloud auth list for debugging
      - name: List GCP auth
        run: gcloud auth list

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev

      # Configure Docker to use the GCP Artifact Registry
      - name: Configure Docker for GCP Artifact Registry
        run: |
          echo "Configuring Docker to authenticate with GCP Artifact Registry..."
          gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_ARTIFACT_PROJECT_ID }}/risechain/bridge-ui
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.bridgeApp
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_WALLET_CONNECT_PROJECT_ID=${{ secrets.VITE_WALLET_CONNECT_PROJECT_ID }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
